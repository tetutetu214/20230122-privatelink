AWSTemplateFormatVersion: "2010-09-09"
Description: "Create PrivateLink-PrivateWeb"
    
# ------------------------------------------------------------
#  Metadate
# ------------------------------------------------------------
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Parameters:
          - PJPrefix
          - EC2AMI
          - InstanceType
          - UserName

# ------------------------------------------------------------
# Input Parameters
# ------------------------------------------------------------
Parameters:
  PJPrefix:
    Type: 'String'
    Default: "cfn-ec2"
  EC2AMI:
    Type: 'String'
    Default: "ami-0bba69335379e17f8"
  InstanceType:
    Type: 'String'
    Default: "t2.micro"
  UserName:
    Type: 'String'
    Default: "inamura"
    
    
### Resources ###
Resources:
# ------------------------------------------------------------
# EC2
# ------------------------------------------------------------
### WebServer ###
  WebServer:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !Ref EC2AMI
      InstanceType: !Ref InstanceType 
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          SubnetId: !ImportValue cfn-network-A-private-subnet
          GroupSet:
            - !Ref WebSG
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum -y update
          sudo yum -y install httpd
          sudo systemctl start httpd
          sudo systemctl enable httpd
          sudo echo "Hello World! Test Page For Success" > /var/www/html/index.html
      Tags:
        - Key: Name
          Value: !Sub "${PJPrefix}-Provider-WebServer-inamura"
        - Key: UserName
          Value: !Ref UserName 
          
# ------------------------------------------------------------
# SecurityGroup
# ------------------------------------------------------------
### WebServer Security Group ###
  WebSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "WebServer SG"
      GroupName: !Sub "${PJPrefix}-Web-SG-inamura"
      VpcId: !ImportValue cfn-network-A-vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort : 80
          ToPort : 80
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-Provider-Web-SG-inamura"
        - Key: UserName
          Value: !Ref UserName
            
# ------------------------------------------------------------
# TargetGroup
# ------------------------------------------------------------
  TargetGroup: 
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      VpcId: !ImportValue cfn-network-A-vpc
      Name: !Sub "${PJPrefix}-Provider-TG-inamura"
      Protocol: TCP
      Port: 80
      Targets: 
        - Id: !Ref WebServer
          Port: 80
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-Provider-TG"
        - Key: UserName
          Value: !Ref UserName

# ------------------------------------------------------------
# NetworkLoadBalancer
# ------------------------------------------------------------
  NLB: 
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Name: !Sub "${PJPrefix}-Provider-NLB-inamura"
      Scheme: "internal"
      LoadBalancerAttributes: 
        - Key: "deletion_protection.enabled"
          Value: false
      Subnets: 
        - !ImportValue cfn-network-A-private-subnet
      Type: network
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-Provider-NLB"
        - Key: UserName
          Value: !Ref UserName
      
  NLBListenerHTTP: 
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref NLB
      Port: 80
      Protocol: TCP
      
# ------------------------------------------------------------
# EndPointService
# ------------------------------------------------------------
  VPCEndpointService:
    Type: AWS::EC2::VPCEndpointService
    Properties: 
      AcceptanceRequired: true
      NetworkLoadBalancerArns:
        - !Ref NLB
        
  VPCEndpointPermission:
    Type: AWS::EC2::VPCEndpointServicePermissions
    Properties: 
      AllowedPrincipals: 
        - !Sub "arn:aws:iam::${AWS::AccountId}:root"
      ServiceId: !Ref VPCEndpointService
# ------------------------------------------------------------
# Output Parameters
# ------------------------------------------------------------
Outputs:
  VPCEndpointService:
    Value: !Sub "com.amazonaws.vpce.${AWS::Region}.${VPCEndpointService}"
    Export:
      Name: !Sub "${PJPrefix}-VPCEndpoint"